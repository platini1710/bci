

plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'application'
	id 'eclipse'
	id 'java'
 id 'maven-publish'
}

group 'com.bci.tareas'
version '1.0-SNAPSHOT'

application {
    mainClass = "com.bci.tareas.SpringBootRest2Application"
}

 java {
   sourceCompatibility = JavaVersion.VERSION_1_8
}

def springfoxVersion = '3.0.0'
def springfoxUiVersion = '2.9.2'

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': 'com.global.tareas.SpringBootRest2Application'
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "io.springfox:springfox-swagger2:${springfoxVersion}"
	implementation "io.springfox:springfox-swagger-ui:${springfoxUiVersion}"
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	testImplementation("org.mockito:mockito-core")
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
implementation 'mysql:mysql-connector-java:8.0.25'
//Thanks for using https://jar-download.com


}




tasks.register("copyTask", Copy) {
    def fromDir = "${project.projectDir.toString()}/build/reports"
    def toDir =   "${project.projectDir.toString()}/build/1"

    println "${project.buildDir.toString()}"
    println "   from $fromDir"
    println "   into $toDir"

    from fromDir
    into toDir
}




tasks.named('test', Test) {
	useJUnitPlatform ()
	outputs.upToDateWhen { false }
}

test {
	testLogging {
		events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
	}
}

dependencies {
	integrationTestImplementation 'com.google.code.gson:gson:2.3.1'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-web'
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.mockito:mockito-junit-jupiter:4.7.0'
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += output + compileClasspath

    }
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
    useJUnitPlatform()
    testLogging {
        events "passed"
    }
  	outputs.upToDateWhen { false }
}

check.dependsOn integrationTest